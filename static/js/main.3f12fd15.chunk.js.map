{"version":3,"sources":["NewLetterInput.tsx","api.ts","store/WordsStore.ts","RootStateContext.tsx","assets/img/eCommerceSiteSearch.png","assets/img/keys.svg","assets/img/pie-chart.svg","assets/img/info.svg","assets/img/twitter.svg","assets/img/facebook.svg","assets/img/instagram.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NewLetterInput","loadWords","useState","letter","setLetter","useEffect","console","log","className","placeholder","maxLength","value","onChange","event","target","replace","type","name","onKeyPress","charCode","onClick","disabled","getAllWordsCount","a","letterLow","toLowerCase","words","filter","word","includes","length","getWordsStartCount","charAt","getWordsEndCount","slice","result","getAppearCount","join","split","l","getRepeatCount","WordsStore","makeObservable","this","observable","action","startCount","endCount","appearCount","repeatCount","allCount","start","end","appear","repeat","all","RootStateContext","React","createContext","wordsStore","RootStateProvider","children","Provider","App","observer","useContext","setOpen","src","img","alt","calcIcon","toUpperCase","chartIcon","animate","animationDuration","animationEasing","label","dataEntry","labelStyle","fontSize","data","title","color","infoIcon","facebookIcon","twitterIcon","instagramIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f12fd15.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { WordsStore } from './store/WordsStore'\r\n\r\ntype NewLetterInputProps = {\r\n    loadWords: WordsStore[\"loadWords\"]\r\n}\r\n\r\nexport const NewLetterInput: React.FC<NewLetterInputProps> = ({ loadWords }) => {\r\n\r\n    const [letter, setLetter] = useState('');\r\n\r\n    const updateLetter = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLetter(event.target.value.replace(/[^A-Za-z]/ig, ''))\r\n    }\r\n\r\n    const onGetDataClick = () => {\r\n        loadWords(letter)\r\n        setLetter('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(letter);\r\n    }, [letter])\r\n\r\n    return (\r\n        <div className=\"new-letter-container\">\r\n            <input\r\n                placeholder=\"L\"\r\n                maxLength={1}\r\n                value={letter}\r\n                onChange={updateLetter}\r\n                type=\"text\"\r\n                name=\"letter\"\r\n                onKeyPress={event => (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122)}\r\n                />\r\n\r\n            <button onClick={onGetDataClick} disabled={!letter}>{letter ? 'Click here to get Data' : 'Type a letter in the box' }</button>\r\n        </div>\r\n    )\r\n}\r\n","import words from './db.json'\r\n\r\n// Number of words with letter\r\nexport const getAllWordsCount = async (letter: string) => {\r\n    const letterLow = letter.toLowerCase()\r\n    return await words.filter(word => word.includes(letterLow)).length;\r\n}\r\n\r\nexport const getWordsStartCount = async (letter: string) => {\r\n    const letterLow = letter.toLowerCase()\r\n    return await words.filter(word => word.charAt(0) === letterLow).length;\r\n}\r\n\r\nexport const getWordsEndCount = async (letter: string) => {\r\n    const letterLow = letter.toLowerCase()\r\n    const result = await words.filter(word => word.slice(-1) === letterLow).length;\r\n    return result\r\n}\r\n\r\n// Number of Times letter appears in total\r\nexport const getAppearCount = async (letter: string) => {\r\n    const letterLow = letter.toLowerCase()\r\n    return await words.join('').split('').filter(l => l === letterLow).length\r\n}\r\n\r\nexport const getRepeatCount = async (letter: string) => {\r\n    const letterLow = letter.toLowerCase()\r\n    return await words.filter(word => word.includes(letterLow + letterLow)).length;\r\n}\r\n","import { observable, action, makeObservable } from 'mobx'\r\nimport { getWordsStartCount, getWordsEndCount, getAppearCount, getRepeatCount, getAllWordsCount } from '../api'\r\n\r\nexport class WordsStore {\r\n    @observable words: any\r\n\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @action\r\n    loadWords = async(letter: string) => {\r\n        if (!letter) return;\r\n\r\n        const startCount = await getWordsStartCount(letter)\r\n        const endCount = await getWordsEndCount(letter)\r\n        const appearCount = await getAppearCount(letter)\r\n        const repeatCount = await getRepeatCount(letter)\r\n        const allCount = await getAllWordsCount(letter)\r\n\r\n        this.words = { start:startCount, end:endCount, appear:appearCount, repeat:repeatCount, all:allCount, letter }\r\n        // this.words = { startCount, endCount, appearCount }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { WordsStore } from './store/WordsStore'\r\n\r\ntype RootStateContextValue = {\r\n    wordsStore: WordsStore\r\n}\r\n\r\nconst RootStateContext = React.createContext<RootStateContextValue>({} as RootStateContextValue)\r\n\r\nconst wordsStore = new WordsStore()\r\n\r\nexport const RootStateProvider: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\r\n    return (\r\n        <RootStateContext.Provider value={{ wordsStore }}>\r\n            {children}\r\n        </RootStateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useRootStore = () => React.useContext(RootStateContext)","export default __webpack_public_path__ + \"static/media/eCommerceSiteSearch.6488d9ee.png\";","export default __webpack_public_path__ + \"static/media/keys.3ef206a5.svg\";","export default __webpack_public_path__ + \"static/media/pie-chart.bff4932c.svg\";","export default __webpack_public_path__ + \"static/media/info.3dba0b87.svg\";","export default __webpack_public_path__ + \"static/media/twitter.cb2a3a09.svg\";","export default __webpack_public_path__ + \"static/media/facebook.4e0e81d6.svg\";","export default __webpack_public_path__ + \"static/media/instagram.214778e7.svg\";","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { NewLetterInput } from './NewLetterInput';\r\nimport { useRootStore } from './RootStateContext';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './App.css';\r\n\r\nimport img from './assets/img/eCommerceSiteSearch.png'\r\nimport calcIcon from './assets/img/keys.svg'\r\nimport chartIcon from './assets/img/pie-chart.svg'\r\nimport infoIcon from './assets/img/info.svg'\r\nimport twitterIcon from './assets/img/twitter.svg'\r\nimport facebookIcon from './assets/img/facebook.svg'\r\nimport instagramIcon from './assets/img/instagram.svg'\r\n\r\nconst App = observer(function App() {\r\n\r\n    const { wordsStore } = useRootStore()\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return <div className=\"app-container\">\r\n        <nav>\r\n            <p className=\"logo\">DictionaryApp</p>\r\n            <ul>\r\n                <li onClick={()=>setOpen(true)}><p>About</p></li>\r\n                <li onClick={()=>setOpen(true)}><p>Resources</p></li>\r\n                <li onClick={()=>setOpen(true)}><p>Contact</p></li>\r\n            </ul>\r\n        </nav>\r\n        <header>\r\n            <section className=\"query-section\">\r\n                <div className=\"left\">\r\n                    <h4>Type in a letter to get to know more about it.</h4>\r\n                    <p>This app was created using React and MobX. Insert an english letter to see how many time it's used in the dictionary, stats and more.</p>\r\n                    <NewLetterInput loadWords={wordsStore.loadWords} />\r\n                </div>\r\n                <div className=\"right\">\r\n                    <img src={img} className=\"img\" alt=\"\" />\r\n                </div>\r\n            </section>\r\n        </header>\r\n\r\n        {wordsStore.words && <>\r\n            <section className=\"data-section\">\r\n                <h2>Information about the letter {wordsStore.words.letter} from our dictionary</h2>\r\n                <div className=\"data-container\">\r\n                    <div className=\"data-box\">\r\n                        <div className=\"data-box-header one\">\r\n                            <img src={calcIcon} className=\"icon\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"data-box-content\">\r\n                            <h3>{wordsStore.words.letter.toUpperCase()} STATS</h3>\r\n                            <p><span>{wordsStore.words.start}</span> words start with '{wordsStore.words.letter}'.</p>\r\n                            <p><span>{wordsStore.words.end}</span> words end with '{wordsStore.words.letter}'.</p>\r\n                            <p><span>{wordsStore.words.all}</span> words include '{wordsStore.words.letter}'.</p>\r\n                            <p><span>{wordsStore.words.repeat}</span> words include '{wordsStore.words.letter}{wordsStore.words.letter}'.</p>\r\n                            <p><span>{wordsStore.words.appear}</span> times '{wordsStore.words.letter}' appears in dictionary.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"data-box\">\r\n                        <div className=\"data-box-header two\">\r\n                            <img src={chartIcon} className=\"icon\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"data-box-content\">\r\n                            <h3>{wordsStore.words.letter.toUpperCase()} CHARTS</h3>\r\n                            <PieChart\r\n                                animate\r\n                                animationDuration={2000}\r\n                                animationEasing={'ease-in'}\r\n                                label={({ dataEntry }) => dataEntry.value}\r\n                                labelStyle={{ fontSize: '5px' }}\r\n                                data={[\r\n                                    { title: `Words start with ${wordsStore.words.letter}`, value: wordsStore.words.start, color: '#cab0eb' },\r\n                                    { title: `Words end with ${wordsStore.words.letter}`, value: wordsStore.words.end, color: '#b0cef5' },\r\n                                    { title: `Words include ${wordsStore.words.letter}`, value: wordsStore.words.all, color: '#eddff9' },\r\n                                ]}\r\n                            />;\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"data-box\">\r\n                        <div className=\"data-box-header three\">\r\n                            <img src={infoIcon} className=\"icon\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"data-box-content\">\r\n                            <h3>MORE INFO ABOUT {wordsStore.words.letter.toUpperCase()}</h3>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo non molestias quam dolorum aperiam reprehenderit error cupiditate saepe rem, alias earum expedita nesciunt maiores minima dignissimos consequatur illo hic voluptatibus.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </>}\r\n        <footer>\r\n            <p>DictionaryApp</p>\r\n            <p>© CoffeeRights Michael Michaeli 2020</p>\r\n            <div>\r\n                <img src={facebookIcon} alt=\"\" />\r\n                <img src={twitterIcon} alt=\"\" />\r\n                <img src={instagramIcon} alt=\"\" />\r\n            </div>\r\n        </footer>\r\n    </div>\r\n})\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RootStateProvider } from './RootStateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStateProvider>\n      <App />\n    </RootStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}